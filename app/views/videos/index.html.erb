<style>
  .video-card {
    width: 100%;
    height: 300px;
    object-fit: cover;
    border-top-left-radius: 0.75rem;
    border-top-right-radius: 0.75rem;
  }

  .video-card-wrapper {
    display: none;
    opacity: 0;
    transform: translateY(30px);
    transition: opacity 0.5s ease, transform 0.5s ease;
  }

  .video-card-wrapper.visible {
    opacity: 1;
    transform: translateY(0);
  }

  .video-container {
    background-color: #1e1e1e;
    border-radius: 0.75rem;
    box-shadow: 0 0.5rem 1.25rem rgba(0, 0, 0, 0.2);
    overflow: hidden;
    transition: transform 0.3s ease;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
  }

  .video-container:hover {
    transform: translateY(-5px);
  }

  .video-title {
    padding: 0.75rem 1rem;
    font-size: 1.1rem;
    background-color: #2c2c2c;
    color: #fff;
    border-bottom-left-radius: 0.75rem;
    border-bottom-right-radius: 0.75rem;
  }

  iframe.video-card {
    border: none;
  }
</style>

<div class="container px-md-5">
  <div class="py-md-5 py-4">
    <h4 class="text-center text-white caudex-bold p-0 m-0">VIDEOS</h4>
  </div>

  <div class="row row-cols-xl-2 row-cols-md-2 row-cols-1 px-md-0 px-2" id="video-gallery">
    <% @videos.each_with_index do |video, index| %>
      <div class="col mt-4 video-card-wrapper">
        <div class="video-container">
          <% if video.youtube_url.present? %>
            <% youtube_id = video.youtube_url[%r{(?:youtube\.com/watch\?v=|youtu\.be/)([\w\-]+)}, 1] %>
            <iframe
              data-src="https://www.youtube.com/embed/<%= youtube_id %>"
              title="<%= video.name %>"
              allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
              allowfullscreen
              class="video-card"
            ></iframe>
          <% elsif video.video.attached? %>
            <video class="video-card" controls data-src="<%= url_for(video.video) %>">
              Your browser does not support the video tag.
            </video>
          <% end %>
          <div class="video-title caudex-bold text-center"><%= video.name %></div>
        </div>
      </div>
    <% end %>
  </div>

  <% if @videos.size > 4 %>
      <div class="text-center my-4">
        <button id="show-more-videos-btn" class="caudex-bold text-black py-2 px-4 rounded fs-5 back-button text-white" style="border: 2px solid grey; border-radius: 12px; color: white;">Show More</button>
        <button id="show-less-videos-btn" class="caudex-bold text-black py-2 px-4 rounded fs-5 back-button text-white" style="border: 2px solid grey; border-radius: 12px; color: white;">Show Less</button>
    </div>
  <% end %>
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const cards = document.querySelectorAll(".video-card-wrapper");
    const showMoreBtn = document.getElementById("show-more-videos-btn");
    const showLessBtn = document.getElementById("show-less-videos-btn");

    const videoItems = Array.from(cards);
    let visibleCount = 4;

    function loadVideo(card) {
      const iframe = card.querySelector("iframe");
      if (iframe && iframe.dataset.src && !iframe.src) {
        iframe.src = iframe.dataset.src;
      }

      const video = card.querySelector("video");
      if (video && video.dataset.src && video.children.length === 0) {
        const source = document.createElement("source");
        source.src = video.dataset.src;
        source.type = "video/mp4";
        video.appendChild(source);
        video.load();
      }
    }

    function updateVisibleVideos() {
      videoItems.forEach((card, index) => {
        if (index < visibleCount) {
          card.style.display = "block";
          setTimeout(() => {
            card.classList.add("visible");
            loadVideo(card);
          }, index * 100);
        } else {
          card.style.display = "none";
          card.classList.remove("visible");
        }
      });

      if (visibleCount >= videoItems.length) {
        showMoreBtn.classList.add("d-none");
        showLessBtn.classList.remove("d-none");
      } else {
        showMoreBtn.classList.remove("d-none");
        showLessBtn.classList.add("d-none");
      }
    }

    updateVisibleVideos();

    if (showMoreBtn) {
      showMoreBtn.addEventListener("click", () => {
        visibleCount += 2;
        updateVisibleVideos();
      });
    }

    if (showLessBtn) {
      showLessBtn.addEventListener("click", () => {
        visibleCount = 4;
        updateVisibleVideos();
        window.scrollTo({
          top: document.getElementById("video-gallery").offsetTop - 100,
          behavior: "smooth"
        });
      });
    }
  });
</script>
